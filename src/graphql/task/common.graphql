scalar Date

type Task {
  id: ID!
  name: String!
  position: Int
  section: Section
  status: String
  description: String
  dueAt: String
  createdAt: Date
  updatedAt: Date
  timerRecords: [TimerRecord]
  timers: [Timer]
  estimate: Estimate
}

type TaskResult {
  success: Boolean!
  path: String
  message: String
  result: Task
}

type TaskResults {
  success: Boolean!
  path: String
  message: String
  results: [Task]!
}

type Query {
  getTasks: TaskResults!
  getTask(id: ID!): TaskResult!
}

type Mutation {
  createTask(name: String!, sectionId: ID!): TaskResult!
  updateTask(
    id: ID!
    name: String
    sectionId: ID
    description: String
    dueAt: String
    status: String
  ): TaskResult!
  deleteTask(id: ID!): Boolean!
}
